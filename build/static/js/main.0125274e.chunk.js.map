{"version":3,"sources":["index.js"],"names":["List","props","data","map","item","key","id","title","Home","getDate","page","fetch","then","res","json","console","log","setState","state","this","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAUIA,EAAO,SAACC,GACV,OAAO,4BAEHA,EAAMC,KAAKC,KACT,SAACC,GAAD,OAAQ,wBAAIC,IAAKD,EAAKE,IAAKF,EAAKG,YAMlCC,E,kDACJ,WAAYP,GAAO,IAAD,8BAChB,cAAMA,IAcRQ,QAAU,SAACC,GACTC,MAAM,0CAA0CD,GAC/CE,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,YAAa,IAAXV,EAAU,EAAVA,KACNa,QAAQC,IAAId,GACZ,EAAKe,SAAS,CAACf,aAlBjB,EAAKgB,MAAQ,CACXhB,KAAK,IAHS,E,gEAOE,IAAD,OACjBS,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAM,YAAa,IAAXV,EAAU,EAAVA,KACPa,QAAQC,IAAId,GACZ,EAAKe,SAAS,CAACf,c,+BAWV,IAAD,OACCA,EAAQiB,KAAKD,MAAbhB,KAEP,OAAO,6BADM,CAAC,EAAE,EAAE,EAAE,EAAE,GAGbC,KACH,SAACC,GAAD,OACE,4BACEC,IAAKD,EACLgB,QAAS,kBAAI,EAAKX,QAAQL,KAEzBA,MAIT,kBAACJ,EAAD,CAAME,KAAMA,S,GAvCCmB,IAAMC,WA4CzBC,IAASC,OACP,kBAAChB,EAAD,CAAMN,KAAK,QACXuB,SAASC,eAAe,W","file":"static/js/main.0125274e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n\nlet List = (props)=>{\n  return <ul>\n    {\n      props.data.map(\n        (item)=><li key={item.id}>{item.title}</li>\n      )\n    }\n  </ul>\n}\n\nclass Home extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      data:[]\n    }\n    // this.handleClick = this.handleClick.bind(this)\n  }\n  componentDidMount(){\n    fetch('https://cnodejs.org/api/v1/topics')\n    .then(res=>res.json())\n    .then( ({data}) => {\n      console.log(data);\n      this.setState({data})\n    })\n  }\n  getDate = (page)=>{\n    fetch('https://cnodejs.org/api/v1/topics?page='+page)\n    .then(res=>res.json())\n    .then(({data}) => {\n      console.log(data);\n      this.setState({data})\n    })\n  }\n  render(){\n    const {data} = this.state;\n    const btns = [1,2,3,4,5];\n    return <div>\n      {\n        btns.map(\n          (item)=>(\n            <button \n              key={item}\n              onClick={()=>this.getDate(item)}\n            >\n              {item}\n            </button>\n        ))\n      }\n      <List data={data}/>\n    </div>\n  }\n}\n\nReactDOM.render(\n  <Home data='abc'/>,\n  document.getElementById('root')\n);\n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n"],"sourceRoot":""}